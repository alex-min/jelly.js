// Generated by CoffeeScript 1.6.2
var File, Logger, PluginHandler, ReadableEntity, Tools, TreeElement, async, fs, _PluginHandler;

async = require('async');

fs = require('fs');

Tools = require('./Tools');

Logger = require('./Logger');

ReadableEntity = require('./ReadableEntity');

TreeElement = require('./TreeElement');

File = require('./File');

/**
 * PluginDirectory is the parent class of PluginHandler.
 * Each Jelly instance is suppose to contain a PluginDirectory class with multiple PluginHandler in it.
 * This class is dealing only with general methods related to all plugins.
 * To use a plugin directly, look at the PluginHandler class.
 * 
 * @class PluginDirectory
 * @extends Logger
 * @extends ReadableEntity
 * @extends TreeElement
*/


PluginHandler = Tools.implementing(Logger, ReadableEntity, TreeElement, _PluginHandler = (function() {
  function _PluginHandler() {}

  return _PluginHandler;

})(), PluginHandler = (function() {
  function PluginHandler() {
    this._constructor_();
  }

  PluginHandler.prototype._constructor_ = function() {
    return this._parentConstructor_();
  };

  PluginHandler.prototype.reload = function(cb) {
    cb = cb || function() {};
    return cb();
  };

  return PluginHandler;

})());

module.exports = PluginHandler;
