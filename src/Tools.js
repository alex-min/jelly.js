// Generated by CoffeeScript 1.6.2
var extend,
  __slice = [].slice;

exports.implementing = function() {
  var classReference, key, mixin, mixins, value, _i, _j, _len, _ref;

  mixins = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), classReference = arguments[_i++];
  for (_j = 0, _len = mixins.length; _j < _len; _j++) {
    mixin = mixins[_j];
    _ref = mixin.prototype;
    for (key in _ref) {
      value = _ref[key];
      classReference.prototype[key] = value;
    }
  }
  return classReference;
};

extend = function(obj, mixin) {
  var method, name, _results;

  _results = [];
  for (name in mixin) {
    method = mixin[name];
    _results.push(obj[name] = method);
  }
  return _results;
};

exports.include = function(klass, mixin) {
  return extend(klass.prototype, mixin);
};
